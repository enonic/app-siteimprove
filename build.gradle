plugins {
    id 'java'
    id 'com.enonic.xp.app' version '1.1.0'
    id "com.moowork.node" version '1.1.1'
}

app {
    name = project.appName
    displayName = 'Siteimprove'
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
    systemVersion = "${xpVersion}"
}

dependencies {
    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-thymeleaf:${xpVersion}"
}

repositories {
    mavenLocal()
    jcenter()
    xp.enonicRepo()
}

node {
    download = true
    version = '8.10.0'
}


task flush( type: org.gradle.api.tasks.Delete, dependsOn: clean ) {
    description = 'Clean the project from built sources and dependencies'
    delete '.xp'
}

task npmInstallForce( type: NpmTask ) {
    description = 'Update all project node dependencies'
    args = ['install', '--force']
}

task cleanNode( type: org.gradle.api.tasks.Delete ) {
    delete 'node_modules'
}

task lint( type: NpmTask, dependsOn: npmInstall ) {
    args = [ 'run', 'lint' ]
    inputs.files fileTree( dir: 'modules', include: '**/src/main/**.*' )
    outputs.dir file('gradle')
    outputs.upToDateWhen { false }
}

task webpack( type: NodeTask, dependsOn: lint ) {
    environment = [ 'NODE_ENV': nodeEnvironment() ]
    description = 'Build UI resources (ts, css, etc).'
    inputs.dir 'src/main'
    outputs.dir "${buildDir}/resources/main"
    script = file( './node_modules/webpack/bin/webpack' )
}

jar {
    exclude 'assets/**/*.ts'
    exclude 'assets/**/*.less'

    dependsOn += webpack
}

def nodeEnvironment() {
    def environments = [ prod : 'production', dev: 'development' ]
    def nodeEnv = environments[hasProperty( 'env' ) ? env : 'prod']
    return nodeEnv != null ? nodeEnv : 'production'
}
